@{
    ViewData["Title"] = "Đơn hàng của tôi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta charset="UTF-8">

<div class="container py-4">
    <div class="row mb-4">
        <div class="col">
            <h2 class="text-center fw-bold">Đơn hàng của tôi</h2>
            <p class="text-center text-secondary">Theo dõi trạng thái các đơn hàng của bạn</p>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="order-filter d-flex align-items-center">
            <select id="orderFilter" class="form-select me-2">
                <option value="all">Tất cả đơn hàng</option>
                <option value="pending">Chờ xử lý</option>
                <option value="processing">Đang xử lý</option>
                <option value="shipped">Đang giao</option>
                <option value="delivered">Đã giao</option>
                <option value="cancelled">Đã hủy</option>
            </select>
            <button id="filterButton" class="btn btn-outline-primary">Lọc</button>
        </div>

        <button id="refreshButton" class="btn btn-primary d-flex align-items-center">
            <i class="bi bi-arrow-clockwise me-2"></i>
            Làm mới
        </button>
    </div>

    <div id="ordersContainer" class="position-relative min-vh-50">
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Đang tải...</span>
            </div>
            <p class="mt-2">Đang tải đơn hàng...</p>
        </div>
    </div>

    <!-- Template cho đơn hàng trống -->
    <template id="noOrdersTemplate">
        <div class="text-center py-5">
            <i class="bi bi-box-seam display-1 text-secondary"></i>
            <h4 class="mt-3">Không có đơn hàng nào</h4>
            <p class="text-secondary">Bạn chưa có đơn hàng nào trong danh sách</p>
            <a href="/products" class="btn btn-primary mt-2">Mua sắm ngay</a>
        </div>
    </template>

    <!-- Template cho lỗi -->
    <template id="errorTemplate">
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <span id="errorMessage">Đã xảy ra lỗi khi tải đơn hàng</span>
        </div>
    </template>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            await loadUserOrders();

            // Sự kiện nút làm mới
            document.getElementById('refreshButton').addEventListener('click', async () => {
                showLoading();
                await loadUserOrders();
            });

            // Sự kiện nút lọc
            document.getElementById('filterButton').addEventListener('click', async () => {
                await loadUserOrders();
            });
        });

        function showLoading() {
            document.getElementById('ordersContainer').innerHTML = `
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <p class="mt-2">Đang tải đơn hàng...</p>
                        </div>
                    `;
        }

        function showError(message) {
            const container = document.getElementById('ordersContainer');
            const template = document.getElementById('errorTemplate').content.cloneNode(true);
            template.getElementById('errorMessage').textContent = message || 'Đã xảy ra lỗi khi tải đơn hàng';
            container.innerHTML = '';
            container.appendChild(template);
        }

        function showNoOrders() {
            const container = document.getElementById('ordersContainer');
            const template = document.getElementById('noOrdersTemplate').content.cloneNode(true);
            container.innerHTML = '';
            container.appendChild(template);
        }

        // Format tiền tệ VND
        function formatCurrency(amount) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND',
                minimumFractionDigits: 0
            }).format(amount);
        }

        // Format ngày tháng
        function formatDate(dateString) {
            if (!dateString) return 'Chưa cập nhật';
            return new Date(dateString).toLocaleDateString('vi-VN', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Lấy lớp màu theo trạng thái
        function getStatusClass(status) {
            switch (status.toLowerCase()) {
                case 'đã giao':
                case 'delivered':
                    return 'bg-success';
                case 'đang giao':
                case 'shipped':
                    return 'bg-info';
                case 'đang xử lý':
                case 'processing':
                    return 'bg-primary';
                case 'chờ xử lý':
                case 'pending':
                    return 'bg-warning';
                case 'đã hủy':
                case 'cancelled':
                    return 'bg-danger';
                default:
                    return 'bg-secondary';
            }
        }

        // Lấy biểu tượng theo trạng thái
        function getStatusIcon(status) {
            switch (status.toLowerCase()) {
                case 'đã giao':
                case 'delivered':
                    return 'bi-check-circle-fill';
                case 'đang giao':
                case 'shipped':
                    return 'bi-truck';
                case 'đang xử lý':
                case 'processing':
                    return 'bi-gear';
                case 'chờ xử lý':
                case 'pending':
                    return 'bi-clock';
                case 'đã hủy':
                case 'cancelled':
                    return 'bi-x-circle';
                default:
                    return 'bi-question-circle';
            }
        }

        async function loadUserOrders() {
            try {
                showLoading();

                // Lấy giá trị bộ lọc
                const filterValue = document.getElementById('orderFilter').value;
                let apiUrl = '/api/orders/GetMyOrders';

                // Nếu có bộ lọc, thêm query parameter
                if (filterValue && filterValue !== 'all') {
                    apiUrl += `?status=${filterValue}`;
                }

                // Gọi API
                const response = await fetch(apiUrl, {
                    method: 'GET',
                    credentials: 'include'
                });

                const container = document.getElementById('ordersContainer');
                container.innerHTML = '';

                if (response.ok) {
                    const orders = await response.json();

                    if (orders.length === 0) {
                        showNoOrders();
                        return;
                    }

                    // Tạo container cho các card đơn hàng
                    const orderCards = document.createElement('div');
                    orderCards.className = 'row g-3';

                    orders.forEach(order => {
                        const statusClass = getStatusClass(order.orderStatus);
                        const statusIcon = getStatusIcon(order.orderStatus);

                        const card = document.createElement('div');
                        card.className = 'col-md-6 col-lg-4';
                        card.innerHTML = `
                                    <div class="card h-100 border-0 shadow-sm hover-shadow">
                                        <div class="card-header bg-white d-flex justify-content-between align-items-center">
                                            <span class="fw-bold text-truncate">Đơn #${order.orderId}</span>
                                            <span class="badge ${statusClass} px-3 py-2 rounded-pill">
                                                <i class="bi ${statusIcon} me-1"></i>
                                                ${order.orderStatus}
                                            </span>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <small class="text-secondary">Ngày đặt</small>
                                                <p class="mb-0">${formatDate(order.orderDate)}</p>
                                            </div>
                                            <div class="mb-3">
                                                <small class="text-secondary">Ngày giao</small>
                                                <p class="mb-0">${order.deliveryDate ? formatDate(order.deliveryDate) : 'Chưa giao'}</p>
                                            </div>
                                            <div class="mb-3">
                                                <small class="text-secondary">Số lượng sản phẩm</small>
                                                <p class="mb-0">${order.quantity}</p>
                                            </div>
                                            <div class="mb-3">
                                                <small class="text-secondary">Tổng tiền</small>
                                                <p class="mb-0 fw-bold text-primary">${formatCurrency(order.totalAmount)}</p>
                                            </div>
                                            <div class="mb-3">
                                                <small class="text-secondary">Thanh toán</small>
                                                <p class="mb-0 d-flex align-items-center">
                                                    ${order.paymentMethod}
                                                    <span class="ms-2 badge ${order.paymentStatus === 'Đã thanh toán' ? 'bg-success' : 'bg-warning'} rounded-pill">
                                                        ${order.paymentStatus}
                                                    </span>
                                                </p>
                                            </div>
                                            <div>
                                                <small class="text-secondary">Ghi chú</small>
                                                <p class="mb-0 text-truncate" title="${order.notes || 'Không có'}">
                                                    ${order.notes || 'Không có'}
                                                </p>
                                            </div>
                                        </div>
                                        <div class="card-footer bg-white border-top-0">
                                            <button class="btn btn-outline-primary w-100" onclick="viewOrderDetails(${order.orderId})">
                                                <i class="bi bi-eye me-1"></i>
                                                Xem chi tiết
                                            </button>
                                        </div>
                                    </div>
                                `;

                        orderCards.appendChild(card);
                    });

                    container.appendChild(orderCards);

                } else {
                    const errorData = await response.json();
                    showError(errorData.message || 'Không thể tải đơn hàng');
                }
            } catch (error) {
                console.error('Lỗi khi gọi API đơn hàng:', error);
                showError('Lỗi kết nối khi tải đơn hàng');
            }
        }

        // Hàm xem chi tiết đơn hàng - có thể thêm sau
        function viewOrderDetails(orderId) {
            // Có thể chuyển đến trang chi tiết hoặc mở modal
            console.log('Xem chi tiết đơn hàng:', orderId);
            // window.location.href = `/orders/details/${orderId}`;

            // Hoặc hiển thị modal - cần thêm modal vào HTML
            // $('#orderDetailModal').modal('show');
            alert(`Chức năng xem chi tiết đơn hàng #${orderId} đang được phát triển!`);
        }
    </script>
}